1: Variables: This is used to store anything
   How variables are created:
     -dataType variableName =value;

     -Data Type: Primitive Data Types [Know in advance how much memory will be consumed, We don't need object to use them]
        -byte [1 Byte = 8 bits][-128 to 127]
        -short
        -int
        -long
        ---------
        -float
        -double
        -char
        -boolean

        Non-Primitive Data Type: [Don't Know in advance how much memory will be consumed, We need object to use them]
           -Strings
           -Arrays

           PostIncrement/DecrementOperator: AssignAndThenIncrement/Decrement
           Ex: int a=10;
               int b = a++;
                So here at line number 22, first we will assign the value of a to b, and then we will increase the value of
                a by 1

                        int j = a++; //Post Increment [Assign and Increment] [denge aur for apna bhav badhayenge]
                        int t = ++a; //Pre  Increment [Increment and Assign] [pehle bhav badhayenge aur fir denge]

                        Statements: Decision making
                           -if statement
                           -multiple if statement
                           -if else statement
                           -if else if statement
                           -switch statement

                           ================if=======X===============
     if(condition)
     {
          agar condition true hai tabhi bracket k ander ka code execute hoga
     }

                           =================if else===================
          if(condition)
          {
               agar condition true hai tabhi bracket k ander ka code execute hoga
          }
          else
          {
                  agar condition false hai tabhi bracket k ander ka code execute hoga
          }

                                     =================Multiple if else=========X==========
                    if(condition)
                    {
                         agar condition true hai tabhi bracket k ander ka code execute hoga
                    }
                    else
                    {
                            agar condition false hai tabhi bracket k ander ka code execute hoga
                    }

           Multiple if-else statement   : false false false false else -- E
           Multiple if-else statement   : false false true false else  -- T, E
           Multiple if-else if statement: false false true false else  -- T

           ====================if else if ==============================
            if(condition)
                                {
                                     agar condition true hai tabhi bracket k ander ka code execute hoga
                                }
                                else if(condition 2)
                                {
                                     gar condition true hai tabhi bracket k ander ka code execute hoga
                                }
                                                                else if(condition 3)
                                                                {
                                                                     gar condition true hai tabhi bracket k ander ka code execute hoga
                                                                }
                                else
                                {
                                        agar condition false hai tabhi bracket k ander ka code execute hoga
                                }



--if else
- if else if
                                     ==============Switch ============================
                                     switch()
                                     {
                                         case condition1:
                                              karna kya hai
                                              break;
                                         case condition2:
                                              karna kya hai
                                              break;
                                         case condition2:
                                              karna kya hai
                                              break;
                                         default:
                                              karna kya hai
                                              break;

                                     }


                                     --if else    -- sirf ek condition he verify karna hai
                                     - if else if -- multiple conditions verify karna
                                     - switch     -- multiple conditions verify karna, fast verify karna hai aur exact value verify karna hai
                                                     long data type k liye nhi chalega

  ======================Loops===================================================
  -while loop
    variable;
    while(condition over variable)
    {
      Action
      I/D Operator
    }


  -for loop

      for(variable;condition over variable;I/D Operator)
      {
        Action
      }

  -advanced for loop [for each loop]
  for(dataType randomName: nameOfArray)
  {
      action
  }


  int i =1;
  i++
  -----------------------------------------------------------------
  2*1 = 2
  2*2 = 4
  2*3 = 6
  2*4 = 8
  2*5 = 10
  2*6 = 12
  2*7 = 14
  2*8 = 16
  2*9 = 18
  2*10 =20

  =============================
  Variable ---> dataType name=value;
  Arrays   ---> dataType[] name={value1, value2, value3....valueN};
           ---> dataType[] name = new dataType[LengthOfValuesToStore];
  li=0
  hi=length-1
================================================================================
What is a Class?
   -A class is a like template
What is Object?
   -Every copy of the template is called its object

class ABC ---> Object(copy) ---> Syntax:
  --> ClassName nameOfCopy = new ClassName();
